apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
spec:
  selector:
    matchLabels:
      app: zookeeper
  serviceName: zookeeper-service
  replicas: 1
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: "confluentinc/cp-zookeeper:5.5.0"
          ports:
            - containerPort: 2181
              name: client
            - containerPort: 2888
              name: server
            - containerPort: 3888
              name: leader-election
            - containerPort: 5555
              name: jmx
          env:
            - name : KAFKA_HEAP_OPTS
              value: "-Xms512M -Xmx512M"
            - name : KAFKA_JMX_PORT
              value: "5555"
            - name : ZOOKEEPER_TICK_TIME
              value: "2000"
            - name : ZOOKEEPER_SYNC_LIMIT
              value: "5"
            - name : ZOOKEEPER_INIT_LIMIT
              value: "10"
            - name : ZOOKEEPER_MAX_CLIENT_CNXNS
              value: "60"
            - name : ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT
              value: "3"
            - name : ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL
              value: "24"
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name : ZOOKEEPER_SERVERS
              value: "zookeeper-0.zookeeper-service:2888:3888"
            # ZOOKEEPER_SERVER_ID is required just to pass cp-zookeeper ensure script for env check,
            # the value(metadata.mame) is not used and will be overwritten in command part
            - name: ZOOKEEPER_SERVER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command:
            - "bash"
            - "-c"
            - |
              ZK_FIX_HOST_REGEX="s/${HOSTNAME}\.[^:]*:/0.0.0.0:/g"
              ZOOKEEPER_SERVER_ID=$((${HOSTNAME##*-}+1)) \
              ZOOKEEPER_SERVERS=`echo $ZOOKEEPER_SERVERS | sed -e "$ZK_FIX_HOST_REGEX"` \
              /etc/confluent/docker/run
          volumeMounts:
            - name: datadir
              mountPath: /var/lib/zookeeper/data
            - name: datalogdir
              mountPath: /var/lib/zookeeper/log
      volumes:
        - name: datadir
          emptyDir: {}
        - name: datalogdir
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  labels:
    app: zookeeper
spec:
  ports:
    - port: 2181
      name: client
    - port: 2888
      name: server
    - port: 3888
      name: leader-election
  clusterIP: None
  selector:
    app: zookeeper

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-service
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka-broker
          image: "confluentinc/cp-kafka:7.3.0"
          ports:
            - containerPort: 9092
              name: kafka-external
            - containerPort: 19092
              name: kafka-internal
            - containerPort: 5555
              name: jmx
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_OPTS
              value: "-Dlogging.level=INFO"
            - name: KAFKA_HEAP_OPTS
              value: "-Xms512M -Xmx512M"
            - name: KAFKA_LOG_DIRS
              value: "/home/appuser/kafka/data/logs"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181"
            - name: KAFKA_LISTENERS
              value: "INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_JMX_PORT
              value: "5555"
          # This is required because the Downward API does not yet support identification of
          # pod numbering in statefulsets. Thus, we are required to specify a command which
          # allows us to extract the pod ID for usage as the Kafka Broker ID.
          # See: https://github.com/kubernetes/kubernetes/issues/31218
          command:
            - sh
            - -exc
            - |
              export KAFKA_BROKER_ID=${HOSTNAME##*-} && \
              export KAFKA_ADVERTISED_LISTENERS=INTERNAL://${POD_NAME}.kafka-service:19092,EXTERNAL://localhost:$((9093 + ${KAFKA_BROKER_ID})) && \
              exec /etc/confluent/docker/run
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - "/bin/kafka-broker-api-versions --bootstrap-server=localhost:19092"
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "/bin/kafka-broker-api-versions --bootstrap-server=localhost:19092"
            timeoutSeconds: 3
            failureThreshold: 3
            periodSeconds: 10
          volumeMounts:
            - name: datadir-0
              mountPath: /home/appuser/kafka/data
      volumes:
        - name: datadir-0
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  labels:
    app: kafka
spec:
  ports:
    - port: 19092
      name: kafka-internal
  clusterIP: None
  publishNotReadyAddresses: true
  selector:
    app: kafka

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-ext-service
  labels:
    app: kafka
spec:
  type: LoadBalancer
  ports:
    - port: 9092
      name: kafka-external
  selector:
    app: kafka

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-ext-service-0
  labels:
    app: kafka
spec:
  type: LoadBalancer
  ports:
    - port: 9093
      name: broker
      targetPort: 9092
  selector:
    app: kafka
    statefulset.kubernetes.io/pod-name: kafka-0

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-ext-service-1
  labels:
    app: kafka
spec:
  type: LoadBalancer
  ports:
    - port: 9094
      name: broker
      targetPort: 9092
  selector:
    app: kafka
    statefulset.kubernetes.io/pod-name: kafka-1

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-ext-service-2
  labels:
    app: kafka
spec:
  type: LoadBalancer
  ports:
    - port: 9095
      name: broker
      targetPort: 9092
  selector:
    app: kafka
    statefulset.kubernetes.io/pod-name: kafka-2

---

apiVersion: v1
kind: Service
metadata:
  name: zookeeper-ext-service
  labels:
    app: zookeeper
spec:
  type: LoadBalancer
  ports:
    - port: 2181
      name: client
  selector:
    app: zookeeper